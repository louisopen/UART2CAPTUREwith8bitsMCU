; Generated by holtek-gcc v3.19, Sat Nov 21 20:24:28 2020
; 
; Configuration:
;       without long instruction
;       Single ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [1]
acc equ [5]
bp equ [4]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
intc equ [11]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @HCCINIT, @HCCINIT0

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___mfi1 equ [18]
___tm1al equ [58]
___tm1ah equ [59]
___pb equ [37]
public _MuFunction1_ISR
#pragma debug scope 2 1
#line 28 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
@MuFunction1_ISR_code .section at 16 'code'
	mov r1,a
	mov a,status
	mov r2,a
	jmp _MuFunction1_ISR
#pragma debug scope 1 1
@dummy16 proc
	call _MuFunction1_ISR
@dummy16 endp
#pragma debug scope 3 1
_MuFunction1_ISR .section 'code'
_MuFunction1_ISR proc
#line 29 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	snz [18].5
	jmp _L2
#line 31 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	mov a,[58]
	mov _capture_val[0],a
#line 32 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	mov a,[59]
	mov _capture_val[1],a
#line 33 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	mov a,_counting[0]
	mov _capture_val[2],a
#line 34 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	mov a,_counting[1]
	mov _capture_val[3],a
#line 35 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr _counting[0]
	clr _counting[1]
#line 37 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	snz _interrupt_flag[0].2
	jmp _L3
#line 39 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr _interrupt_flag[0].2
#line 40 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr [37].1
	jmp _L4
_L3:
#line 44 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	set _interrupt_flag[0].2
#line 45 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	set [37].1
_L4:
#line 48 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr [18].5
_L2:
#line 50 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	snz [18].4
	jmp _L1
#line 52 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	inc _counting[0]
	sz z
	inc _counting[1]
#line 53 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr [18].4
_L1:
	mov a,r2
	mov status,a
	mov a,r1
	reti
_MuFunction1_ISR endp

#line 53 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
#pragma debug scope 1 1
___tm1c0 equ [54]
___tm1c1 equ [55]
___tm1rpl equ [60]
___tm1rph equ [61]
___intc1 equ [15]
___tmpc equ [25]
public _Capture_init
#pragma debug scope 4 1
#line 64 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
_Capture_init .section 'code'
_Capture_init proc
#line 84 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	mov a,16
	mov [54],a
#line 85 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	mov a,65
	mov [55],a
#line 86 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr [58]
#line 87 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr [59]
#line 88 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr [60]
#line 89 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	clr [61]
#line 90 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	set [18].1
#line 91 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	set [18].0
#line 92 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	set [15].0
#line 93 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	set [54].3
#line 94 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	set [25].1
	ret
_Capture_init endp
#line 94 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
#pragma debug scope 1 1
public _Capture_test
#pragma debug scope 5 1
#line 105 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
_Capture_test .section 'code'
_Capture_test proc
#line 106 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
	call _Capture_init
	ret
_Capture_test endp
#line 106 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
#pragma debug scope 1 1
#line 17 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
public _capture_val
@HCCINIT0 .section 'data'
_capture_val	db 4 dup(0)
#pragma debug struct_begin 42 ""
#pragma debug field 0 8 "byte0"
#pragma debug field 0 8 "byte1"
#pragma debug field 0 8 "byte2"
#pragma debug field 0 8 "byte3"
#pragma debug struct_end
#pragma debug struct_begin 43 "__32_bits"
#pragma debug field 21 8 0 1 "b0" ;0,1
#pragma debug field 21 8 0 1 "b1" ;1,1
#pragma debug field 21 8 0 1 "b2" ;2,1
#pragma debug field 21 8 0 1 "b3" ;3,1
#pragma debug field 21 8 0 1 "b4" ;4,1
#pragma debug field 21 8 0 1 "b5" ;5,1
#pragma debug field 21 8 0 1 "b6" ;6,1
#pragma debug field 21 8 0 1 "b7" ;7,1
#pragma debug field 21 8 1 1 "b8" ;8,1
#pragma debug field 21 8 0 1 "b9" ;9,1
#pragma debug field 21 8 0 1 "b10" ;10,1
#pragma debug field 21 8 0 1 "b11" ;11,1
#pragma debug field 21 8 0 1 "b12" ;12,1
#pragma debug field 21 8 0 1 "b13" ;13,1
#pragma debug field 21 8 0 1 "b14" ;14,1
#pragma debug field 21 8 0 1 "b15" ;15,1
#pragma debug field 21 8 1 1 "b16" ;16,1
#pragma debug field 21 8 0 1 "b17" ;17,1
#pragma debug field 21 8 0 1 "b18" ;18,1
#pragma debug field 21 8 0 1 "b19" ;19,1
#pragma debug field 21 8 0 1 "b20" ;20,1
#pragma debug field 21 8 0 1 "b21" ;21,1
#pragma debug field 21 8 0 1 "b22" ;22,1
#pragma debug field 21 8 0 1 "b23" ;23,1
#pragma debug field 21 8 1 1 "b24" ;24,1
#pragma debug field 21 8 0 1 "b25" ;25,1
#pragma debug field 21 8 0 1 "b26" ;26,1
#pragma debug field 21 8 0 1 "b27" ;27,1
#pragma debug field 21 8 0 1 "b28" ;28,1
#pragma debug field 21 8 0 1 "b29" ;29,1
#pragma debug field 21 8 0 1 "b30" ;30,1
#pragma debug field 21 8 0 1 "b31" ;31,1
#pragma debug struct_end
#pragma debug union_begin 44 ""
#pragma debug field 2 42 "byte"
#pragma debug field 2 43 "bits"
#pragma debug field 0 14 "u32"
#pragma debug field 0 13 "s32"
#pragma debug union_end
#pragma debug variable 44 1 _capture_val "capture_val"

@HCCINIT .section 'data'
#line 16 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\Capture.c"
public _counting
@HCCINIT0 .section 'data'
_counting	db 2 dup(0)
#pragma debug struct_begin 45 ""
#pragma debug field 0 8 "byte0"
#pragma debug field 0 8 "byte1"
#pragma debug struct_end
#pragma debug struct_begin 46 "__16_bits"
#pragma debug field 21 8 0 1 "b0" ;0,1
#pragma debug field 21 8 0 1 "b1" ;1,1
#pragma debug field 21 8 0 1 "b2" ;2,1
#pragma debug field 21 8 0 1 "b3" ;3,1
#pragma debug field 21 8 0 1 "b4" ;4,1
#pragma debug field 21 8 0 1 "b5" ;5,1
#pragma debug field 21 8 0 1 "b6" ;6,1
#pragma debug field 21 8 0 1 "b7" ;7,1
#pragma debug field 21 8 1 1 "b8" ;8,1
#pragma debug field 21 8 0 1 "b9" ;9,1
#pragma debug field 21 8 0 1 "b10" ;10,1
#pragma debug field 21 8 0 1 "b11" ;11,1
#pragma debug field 21 8 0 1 "b12" ;12,1
#pragma debug field 21 8 0 1 "b13" ;13,1
#pragma debug field 21 8 0 1 "b14" ;14,1
#pragma debug field 21 8 0 1 "b15" ;15,1
#pragma debug struct_end
#pragma debug union_begin 47 ""
#pragma debug field 2 45 "byte"
#pragma debug field 2 46 "bits"
#pragma debug field 0 11 "s16"
#pragma debug field 0 12 "u16"
#pragma debug union_end
#pragma debug variable 47 1 _counting "counting"

@HCCINIT .section 'data'
#pragma debug struct_begin 48 "__intc1_bits"
#pragma debug field 21 8 0 1 "__mf1e" ;0,1
#pragma debug field 21 8 0 1 "__mf2e" ;1,1
#pragma debug field 21 8 0 1 "__ade" ;2,1
#pragma debug field 21 8 0 1 "__tb0e" ;3,1
#pragma debug field 21 8 0 1 "__mf1f" ;4,1
#pragma debug field 21 8 0 1 "__mf2f" ;5,1
#pragma debug field 21 8 0 1 "__adf" ;6,1
#pragma debug field 21 8 0 1 "__tb0f" ;7,1
#pragma debug struct_end
#pragma debug union_begin 49 ""
#pragma debug field 2 48 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 49 1 ___intc1 "__intc1" 1
#pragma debug struct_begin 50 "__mfi1_bits"
#pragma debug field 21 8 0 1 "__t1pe" ;0,1
#pragma debug field 21 8 0 1 "__t1ae" ;1,1
#pragma debug field 21 8 0 1 "__t2pe" ;2,1
#pragma debug field 21 8 0 1 "__t2ae" ;3,1
#pragma debug field 21 8 0 1 "__t1pf" ;4,1
#pragma debug field 21 8 0 1 "__t1af" ;5,1
#pragma debug field 21 8 0 1 "__t2pf" ;6,1
#pragma debug field 21 8 0 1 "__t2af" ;7,1
#pragma debug struct_end
#pragma debug union_begin 51 ""
#pragma debug field 2 50 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 51 1 ___mfi1 "__mfi1" 1
#pragma debug struct_begin 52 "__tmpc_bits"
#pragma debug field 21 8 0 1 "__t0cp" ;0,1
#pragma debug field 21 8 0 1 "__t1cp" ;1,1
#pragma debug field 21 8 0 1 "__t2cp" ;2,1
#pragma debug field 21 8 0 4 ;3,4
#pragma debug field 21 8 0 1 "__clop" ;7,1
#pragma debug struct_end
#pragma debug union_begin 53 ""
#pragma debug field 2 52 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 53 1 ___tmpc "__tmpc" 1
#pragma debug struct_begin 54 "__pb_bits"
#pragma debug field 21 8 0 1 "__pb0" ;0,1
#pragma debug field 21 8 0 1 "__pb1" ;1,1
#pragma debug field 21 8 0 1 "__pb2" ;2,1
#pragma debug field 21 8 0 1 "__pb3" ;3,1
#pragma debug field 21 8 0 1 "__pb4" ;4,1
#pragma debug field 21 8 0 1 "__pb5" ;5,1
#pragma debug field 21 8 0 1 "__pb6" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 55 ""
#pragma debug field 2 54 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 55 1 ___pb "__pb" 1
#pragma debug struct_begin 56 "__tm1c0_bits"
#pragma debug field 21 8 0 3 ;0,3
#pragma debug field 21 8 0 1 "__t1on" ;3,1
#pragma debug field 21 8 0 1 "__t1ck0" ;4,1
#pragma debug field 21 8 0 1 "__t1ck1" ;5,1
#pragma debug field 21 8 0 1 "__t1ck2" ;6,1
#pragma debug field 21 8 0 1 "__t1pau" ;7,1
#pragma debug struct_end
#pragma debug union_begin 57 ""
#pragma debug field 2 56 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 57 1 ___tm1c0 "__tm1c0" 1
#pragma debug struct_begin 58 "__tm1c1_bits"
#pragma debug field 21 8 0 1 "__t1cclr" ;0,1
#pragma debug field 21 8 0 1 "__t1capts" ;1,1
#pragma debug field 21 8 0 1 "__t1pol" ;2,1
#pragma debug field 21 8 0 1 "__t1oc" ;3,1
#pragma debug field 21 8 0 1 "__t1io0" ;4,1
#pragma debug field 21 8 0 1 "__t1io1" ;5,1
#pragma debug field 21 8 0 1 "__t1m0" ;6,1
#pragma debug field 21 8 0 1 "__t1m1" ;7,1
#pragma debug struct_end
#pragma debug union_begin 59 ""
#pragma debug field 2 58 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 59 1 ___tm1c1 "__tm1c1" 1
#pragma debug variable 8 1 ___tm1al "__tm1al" 1
#pragma debug variable 8 1 ___tm1ah "__tm1ah" 1
#pragma debug variable 8 1 ___tm1rpl "__tm1rpl" 1
#pragma debug variable 8 1 ___tm1rph "__tm1rph" 1

; output external variables
extern _interrupt_flag:byte
extern r1:byte
extern r2:byte

; 
; Generated by holtek-gcc v3.19, Sat Nov 21 20:24:28 2020
; Rebuild 718
; end of file
