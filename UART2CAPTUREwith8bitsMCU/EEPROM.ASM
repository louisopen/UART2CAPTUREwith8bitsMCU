; Generated by holtek-gcc v3.19, Sat Dec 05 12:59:45 2020
; 
; Configuration:
;       without long instruction
;       Single ROM, Multi-RAM
;       bits_per_rom_unit:16
;       with mp1
;       with tbhp, address(0x9)
;          Use tabrd-const
;       
;       
;       
; use 'tabrdc' instead of 'tabrd'
;       

#pragma translator "holtek-gcc 4.6.4" "3.19" "build 20130711"
; Rebuild 718

ir equ [2]
mp equ [3]
sbp equ [1]
acc equ [5]
bp equ [4]
tblp equ [7]
tbhp equ [9]
status equ [10]
c equ [10].0
ac equ [10].1
z equ [10].2
ov equ [10].3
intc equ [11]

extern ra:byte
extern rb:byte
extern rc:byte
extern rd:byte
extern re:byte
extern rf:byte
extern rg:byte
extern rh:byte
extern _Crom2Prom:near
extern _Crom2PromNext:near

RAMBANK 0 @HCCINIT, @HCCINIT0

RAMBANK 0 @BITDATASEC, @BITDATASEC1
@HCCINIT	.section 'data'
@HCCINIT0	.section 'data'
@BITDATASEC	 .section 'data'
@BITDATASEC1	 .section 'data'

#pragma debug scope 1 1
	extern __DELAY3:near
	extern __DELAYX3:near
	extern __DELAYX6:near
	extern __DELAYY5:near
	extern __DELAYY3:near
	extern _builtin_holtek_delay_2:byte
___intc0 equ [14]
___eea equ [30]
___bp equ [4]
___mp1 equ [3]
___iar1 equ [2]
___eed equ [31]
public _Read_EEPROM
#pragma debug scope 2 1
#line 24 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
_Read_EEPROM .section 'code'
_Read_EEPROM proc
    local _Read_EEPROM_2 db 1 dup(?)	; 0,1
	mov _Read_EEPROM_2[0],a
#pragma debug variable 8 2 _Read_EEPROM_2+0 "addr"
#line 26 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,[14]
	and a,1
	mov rb,a
#line 27 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [14].0
#line 28 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,_Read_EEPROM_2[0]
	mov [30],a
#line 29 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,1
	mov [4],a
#line 30 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,64
	mov [3],a
#line 34 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	set [2].1
#line 35 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	set [2].0
_L3:
#line 36 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	sz [2].0
	jmp _L3
#line 37 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,[31]
	mov ra,a
#line 39 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [2].1
#line 41 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [4]
#line 42 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [14].0
	mov a,rb
	orm a,[14]
#line 44 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,ra
	ret
_Read_EEPROM endp
#line 44 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
#pragma debug scope 1 1
public _Write_EEPROM
#pragma debug scope 3 1
#line 52 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
_Write_EEPROM .section 'code'
_Write_EEPROM proc
public _Write_EEPROM_2
    local _Write_EEPROM_2 db 2 dup(?)	; 1,1
	mov _Write_EEPROM_2[1],a
#pragma debug variable 8 3 _Write_EEPROM_2+1 "addr"
#pragma debug variable 8 3 _Write_EEPROM_2+0 "data"
#line 54 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,[14]
	and a,1
	mov ra,a
#line 55 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [14].0
#line 56 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,_Write_EEPROM_2[1]
	mov [30],a
#line 57 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,_Write_EEPROM_2[0]
	mov [31],a
#line 58 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,1
	mov [4],a
#line 59 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,64
	mov [3],a
#line 63 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	set [2].3
#line 64 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	set [2].2
#line 66 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
;# 66 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c" 1
	nop
_L7:
#line 67 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	sz [2].2
	jmp _L7
#line 69 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [2].3
#line 71 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [4]
#line 72 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr [14].0
	mov a,ra
	orm a,[14]
	ret
_Write_EEPROM endp
#line 72 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
#pragma debug scope 1 1
_databuffer equ [496]
public _TEST_EEPROM
#pragma debug scope 4 1
#line 83 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
_TEST_EEPROM .section 'code'
_TEST_EEPROM proc
    local _TEST_EEPROM_2 db 4 dup(?)	; 0,4
	mov _TEST_EEPROM_2[1],a
#pragma debug variable 8 4 _TEST_EEPROM_2+1 "eeprom_length"
#pragma debug variable 8 4 _TEST_EEPROM_2+0 "i"
#line 87 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr _TEST_EEPROM_2[0]
_L9:
#line 87 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,_TEST_EEPROM_2[0]
	sub a,_TEST_EEPROM_2[1]
	sz c
	jmp _L13
#line 89 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,_TEST_EEPROM_2[0]
	mov ra,a
	mov a,_TEST_EEPROM_2[0]
	mov _Write_EEPROM_2[0],a
	mov a,ra
	call _Write_EEPROM
#line 87 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	inc _TEST_EEPROM_2[0]
	jmp _L9
_L13:
#line 91 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	clr _TEST_EEPROM_2[0]
_L11:
	mov a,_TEST_EEPROM_2[0]
	sub a,_TEST_EEPROM_2[1]
	sz c
	jmp _L14
#line 93 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	mov a,_TEST_EEPROM_2[0]
	mov _TEST_EEPROM_2[2],a
	clr _TEST_EEPROM_2[3]
	mov a,_TEST_EEPROM_2[0]
	mov ra,a
	mov a,ra
	call _Read_EEPROM
	mov ra,a
	mov a,low offset _databuffer
	add a,_TEST_EEPROM_2[2]
	mov mp,a
	mov a,high offset _databuffer
	adc a,_TEST_EEPROM_2[3]
	mov sbp,a
	mov a,sbp
	mov bp,a
	mov a,ra
	mov ir,a
#line 91 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
	inc _TEST_EEPROM_2[0]
	jmp _L11
_L14:
#line 96 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
;# 96 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c" 1
	nop
	ret
_TEST_EEPROM endp
#line 96 "C:\ChipsGarden\醇法\MK8000\MK8000-Power PCB\UART2CAPTUREwith8bitsMCU\UART2CAPTUREwith8bitsMCU\EEPROM.c"
#pragma debug scope 1 1
#pragma debug variable 8 1 ___mp1 "__mp1" 1
#pragma debug struct_begin 42 "__bp_bits"
#pragma debug field 21 8 0 1 "__dmbp0" ;0,1
#pragma debug field 21 8 0 7 ;1,7
#pragma debug struct_end
#pragma debug union_begin 43 ""
#pragma debug field 2 42 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 43 1 ___bp "__bp" 1
#pragma debug struct_begin 44 "__intc0_bits"
#pragma debug field 21 8 0 1 "__emi" ;0,1
#pragma debug field 21 8 0 1 "__int0e" ;1,1
#pragma debug field 21 8 0 1 "__cpe" ;2,1
#pragma debug field 21 8 0 1 "__mf0e" ;3,1
#pragma debug field 21 8 0 1 "__int0f" ;4,1
#pragma debug field 21 8 0 1 "__cpf" ;5,1
#pragma debug field 21 8 0 1 "__mf0f" ;6,1
#pragma debug field 21 8 0 1 ;7,1
#pragma debug struct_end
#pragma debug union_begin 45 ""
#pragma debug field 2 44 "bits"
#pragma debug field 0 8 "byte"
#pragma debug union_end
#pragma debug variable 45 1 ___intc0 "__intc0" 1
#pragma debug variable 8 1 ___eea "__eea" 1
#pragma debug variable 8 1 ___eed "__eed" 1
#pragma debug variable 8 1 ___iar1 "__iar1" 1
#pragma debug array 46 8 16 1
#pragma debug variable 46 1 _databuffer "databuffer" 16

; 
; Generated by holtek-gcc v3.19, Sat Dec 05 12:59:45 2020
; Rebuild 718
; end of file
